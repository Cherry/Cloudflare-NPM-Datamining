{
	"GET /radar/attacks/layer3/summary/bitrate": {
		"description": "Percentage distribution of attacks by bitrate.",
		"operationId": "radar-get-attacks-layer3-summary-by-bitrate",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"OVER_100_GBPS": {
													"example": "13.141944",
													"type": "string"
												},
												"UNDER_500_MBPS": {
													"example": "74.891763",
													"type": "string"
												},
												"_10_GBPS_TO_100_GBPS": {
													"example": "0.01056",
													"type": "string"
												},
												"_1_GBPS_TO_10_GBPS": {
													"example": "6.007082",
													"type": "string"
												},
												"_500_MBPS_TO_1_GBPS": {
													"example": "5.948652",
													"type": "string"
												}
											},
											"required": [
												"UNDER_500_MBPS",
												"OVER_100_GBPS",
												"_1_GBPS_TO_10_GBPS",
												"_500_MBPS_TO_1_GBPS",
												"_10_GBPS_TO_100_GBPS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get attack bitrate summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/duration": {
		"description": "Percentage distribution of attacks by duration.",
		"operationId": "radar-get-attacks-layer3-summary-by-duration",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"OVER_3_HOURS": {
													"example": "4.462923",
													"type": "string"
												},
												"UNDER_10_MINS": {
													"example": "76.243322",
													"type": "string"
												},
												"_10_MINS_TO_20_MINS": {
													"example": "9.48709",
													"type": "string"
												},
												"_1_HOUR_TO_3_HOURS": {
													"example": "4.038413",
													"type": "string"
												},
												"_20_MINS_TO_40_MINS": {
													"example": "3.87624",
													"type": "string"
												},
												"_40_MINS_TO_1_HOUR": {
													"example": "1.892012",
													"type": "string"
												}
											},
											"required": [
												"UNDER_10_MINS",
												"_10_MINS_TO_20_MINS",
												"OVER_3_HOURS",
												"_1_HOUR_TO_3_HOURS",
												"_20_MINS_TO_40_MINS",
												"_40_MINS_TO_1_HOUR"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get attack durations summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/ip_version": {
		"description": "Percentage distribution of attacks by ip version used.",
		"operationId": "radar-get-attacks-layer3-summary-by-ip-version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"example": "99.984766",
													"type": "string"
												},
												"IPv6": {
													"example": "0.015234",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get IP versions summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/protocol": {
		"description": "Percentage distribution of attacks by protocol used.",
		"operationId": "radar-get-attacks-layer3-summary-by-protocol",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"GRE": {
													"example": "0.756379",
													"type": "string"
												},
												"ICMP": {
													"example": "0.015245",
													"type": "string"
												},
												"TCP": {
													"example": "82.89908",
													"type": "string"
												},
												"UDP": {
													"example": "16.328986",
													"type": "string"
												}
											},
											"required": [
												"TCP",
												"UDP",
												"GRE",
												"ICMP"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 protocols summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/summary/vector": {
		"description": "Percentage distribution of attacks by vector.",
		"operationId": "radar-get-attacks-layer3-summary-by-vector",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"ACK Flood": "65.662148",
												"SYN Flood": "16.86401"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get attack vector summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries": {
		"description": "Get attacks change over time by bytes.",
		"operationId": "radar-get-attacks-layer3-timeseries-by-bytes",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE_CHANGE",
						"MIN0_MAX"
					],
					"example": "MIN0_MAX",
					"type": "string"
				}
			},
			{
				"description": "Measurement units, eg. bytes.",
				"in": "query",
				"name": "metric",
				"schema": {
					"default": "bytes",
					"description": "Measurement units, eg. bytes.",
					"enum": [
						"BYTES",
						"BYTES_OLD"
					],
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"values": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"values"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get attacks by bytes summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/bitrate": {
		"description": "Percentage distribution of attacks by bitrate over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-bitrate",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"OVER_100_GBPS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"UNDER_500_MBPS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_10_GBPS_TO_100_GBPS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_1_GBPS_TO_10_GBPS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_500_MBPS_TO_1_GBPS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"UNDER_500_MBPS",
												"OVER_100_GBPS",
												"_1_GBPS_TO_10_GBPS",
												"_500_MBPS_TO_1_GBPS",
												"_10_GBPS_TO_100_GBPS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Attacks By Bitrate Time Series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/duration": {
		"description": "Percentage distribution of attacks by duration over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-duration",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"OVER_3_HOURS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"UNDER_10_MINS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_10_MINS_TO_20_MINS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_1_HOUR_TO_3_HOURS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_20_MINS_TO_40_MINS": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"_40_MINS_TO_1_HOUR": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"UNDER_10_MINS",
												"_10_MINS_TO_20_MINS",
												"OVER_3_HOURS",
												"_1_HOUR_TO_3_HOURS",
												"_20_MINS_TO_40_MINS",
												"_40_MINS_TO_1_HOUR"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attack by duration time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/industry": {
		"description": "Percentage distribution of attacks by industry targeted over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-industry",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attacks by target industries time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/ip_version": {
		"description": "Percentage distribution of attacks by ip version used over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-ip-version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attacks by IP version time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/protocol": {
		"description": "Percentage distribution of attacks by protocol used over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-protocol",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"GRE": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"ICMP": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TCP": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"UDP": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"TCP",
												"UDP",
												"GRE",
												"ICMP"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attacks by protocol timeseries",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/vector": {
		"description": "Percentage distribution of attacks by vector used over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-vector",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"ACK Flood": [
													"97.28898"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attacks by vector",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/timeseries_groups/vertical": {
		"description": "Percentage distribution of attacks by vertical targeted over time.",
		"operationId": "radar-get-attacks-layer3-timeseries-group-by-vertical",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
				"in": "query",
				"name": "direction",
				"schema": {
					"default": "ORIGIN",
					"description": "Together with the `location` parameter, will apply the filter to origin or target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet and Telecom": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 3 attacks by vertical time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/attacks": {
		"description": "Get the top attacks from origin to target location. Values are a percentage out of the total layer 3 attacks (with billing country). You can optionally limit the number of attacks per origin/target location (useful if all the top attacks are from or to the same location).",
		"operationId": "radar-get-attacks-layer3-top-attacks",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of attack origin/target location attack limits. Together with `limitPerLocation`, limits how many objects will be fetched per origin/target location.",
				"in": "query",
				"name": "limitDirection",
				"schema": {
					"default": "ORIGIN",
					"description": "Array of attack origin/target location attack limits. Together with `limitPerLocation`, limits how many objects will be fetched per origin/target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"example": "ORIGIN",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
				"in": "query",
				"name": "limitPerLocation",
				"schema": {
					"description": "Limit the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"originCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top attack pairs (origin and target locations) of Layer 3 attacks",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/industry": {
		"description": "Get the industries targeted by attacks.",
		"operationId": "radar-get-attacks-layer3-top-industries",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Computer Software",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top industry of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/locations/origin": {
		"description": "Get the origin locations of attacks.",
		"operationId": "radar-get-attacks-layer3-top-origin-locations",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"originCountryName": {
														"example": "France",
														"type": "string"
													},
													"rank": {
														"example": 1,
														"type": "number"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top origin locations of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/locations/target": {
		"description": "Get the target locations of attacks.",
		"operationId": "radar-get-attacks-layer3-top-target-locations",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"rank": {
														"example": 1,
														"type": "number"
													},
													"targetCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"targetCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"targetCountryAlpha2",
													"targetCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top target locations of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer3/top/vertical": {
		"description": "Get the verticals targeted by attacks.",
		"operationId": "radar-get-attacks-layer3-top-verticals",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L3/4 attack types.",
				"in": "query",
				"name": "protocol",
				"schema": {
					"description": "Array of L3/4 attack types.",
					"items": {
						"enum": [
							"UDP",
							"TCP",
							"ICMP",
							"GRE"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Internet and Telecom",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top verticals of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/summary/http_method": {
		"description": "Percentage distribution of attacks by http method used.",
		"operationId": "radar-get-attacks-layer7-summary-by-http-method",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"GET": "99.100257",
												"POST": "0.899743"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get HTTP method summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/summary/http_version": {
		"description": "Percentage distribution of attacks by http version used.",
		"operationId": "radar-get-attacks-layer7-summary-by-http-version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"example": {
												"HTTP/1.x": "21.722365",
												"HTTP/2": "77.056555",
												"HTTP/3": "1.22108"
											},
											"properties": {
												"HTTP/1.x": {
													"type": "string"
												},
												"HTTP/2": {
													"type": "string"
												},
												"HTTP/3": {
													"type": "string"
												}
											},
											"required": [
												"HTTP/2",
												"HTTP/1.x",
												"HTTP/3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get HTTP version summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/summary/ip_version": {
		"description": "Percentage distribution of attacks by ip version used.",
		"operationId": "radar-get-attacks-layer7-summary-by-ip-version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"example": {
												"IPv4": "99.935733",
												"IPv6": "0.064267"
											},
											"properties": {
												"IPv4": {
													"type": "string"
												},
												"IPv6": {
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get IP version summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/summary/managed_rules": {
		"description": "Percentage distribution of attacks by managed rules used.",
		"operationId": "radar-get-attacks-layer7-summary-by-managed-rules",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"HTTP Anomaly": "85.714286",
												"XSS": "10.274394"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get managed rules summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/summary/mitigation_product": {
		"description": "Percentage distribution of attacks by mitigation product used.",
		"operationId": "radar-get-attacks-layer7-summary-by-mitigation-product",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"additionalProperties": {
												"type": "string"
											},
											"example": {
												"DDOS": "24.421594",
												"WAF": "53.213368"
											},
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get mitigation product summary",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries": {
		"description": "Get a timeseries of Layer 7 attacks. Values represent HTTP requests and are normalized using min-max by default.",
		"operationId": "radar-get-attacks-layer7-timeseries",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "This field is deprecated, please use the new `mitigationProduct`.",
				"in": "query",
				"name": "attack",
				"schema": {
					"deprecated": true,
					"description": "This field is deprecated, please use the new `mitigationProduct`.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE_CHANGE",
						"MIN0_MAX"
					],
					"example": "MIN0_MAX",
					"type": "string"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"aggInterval": {
													"example": "1h",
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"format": "date-time",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"aggInterval",
												"lastUpdated"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												},
												"values": {
													"items": {
														"example": 0.56,
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"values"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/http_method": {
		"description": "Percentage distribution of attacks by http method used over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-http-method",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"GET": [
													"70.970199"
												],
												"timestamps": [
													"2023-10-01T00:00:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by HTTP method time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/http_version": {
		"description": "Percentage distribution of attacks by http version used over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-http-version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"example": {
												"HTTP/1.x": [
													"50.338734"
												],
												"HTTP/2": [
													"48.661266"
												],
												"HTTP/3": [
													"1.22108"
												],
												"timestamps": [
													"2023-10-01T00:00:00Z"
												]
											},
											"properties": {
												"HTTP/1.x": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/2": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/3": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"HTTP/1.x",
												"HTTP/2",
												"HTTP/3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by HTTP version time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/industry": {
		"description": "Percentage distribution of attacks by targeted industry over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-industry",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by target industries time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/ip_version": {
		"description": "Percentage distribution of attacks by ip version used over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-ip-version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"example": {
												"IPv4": [
													"99.935733"
												],
												"IPv6": [
													"0.064267"
												],
												"timestamps": [
													"2023-10-01T00:00:00Z"
												]
											},
											"properties": {
												"IPv4": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by IP version time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/managed_rules": {
		"description": "Percentage distribution of attacks by managed rules used over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-managed-rules",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"XSS": [
													"0.324198"
												],
												"timestamps": [
													"2023-10-01T00:00:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by managed rules time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/mitigation_product": {
		"description": "Percentage distribution of attacks by mitigation product used over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-mitigation-product",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"DDOS": [
													"48.926354"
												],
												"timestamps": [
													"2023-10-01T00:00:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by mitigation product time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/timeseries_groups/vertical": {
		"description": "Percentage distribution of attacks by targeted vertical over time.",
		"operationId": "radar-get-attacks-layer7-timeseries-group-by-vertical",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN0_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (e.g., browsers, verticals, etc.) to the top items within the specified time range. If the limitPerGroup is set, the response will include that number of items, with the remaining items grouped together under an \"other\" category.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"example": {
												"Internet and Telecom": [
													"5.519081"
												],
												"timestamps": [
													"2023-08-08T10:15:00Z"
												]
											},
											"properties": {
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 attacks by vertical time series",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/ases/origin": {
		"description": "Get the top origin Autonomous Systems of and by Layer 7 attacks. Values are a percentage out of the total Layer 7 attacks. The origin Autonomous Systems is determined by the client IP address.",
		"operationId": "radar-get-attacks-layer7-top-origin-as",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originAsn": {
														"example": "55836",
														"type": "string"
													},
													"originAsnName": {
														"example": "RELIANCEJIO-IN Reliance Jio Infocomm Limited",
														"type": "string"
													},
													"rank": {
														"example": 1,
														"type": "number"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originAsnName",
													"originAsn",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top origin autonomous systems by Layer 7 attacks",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/attacks": {
		"description": "Get the top attacks from origin to target location. Values are a percentage out of the total Layer 7 attacks (with billing country). The attack magnitude can be defined by the number of mitigated requests or by the number of zones affected. You can optionally limit the number of attacks by origin/target location (useful if all the top attacks are from or to the same location).",
		"operationId": "radar-get-attacks-layer7-top-attacks",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of attack origin/target location attack limits. Together with `limitPerLocation`, limits how many objects will be fetched per origin/target location.",
				"in": "query",
				"name": "limitDirection",
				"schema": {
					"default": "ORIGIN",
					"description": "Array of attack origin/target location attack limits. Together with `limitPerLocation`, limits how many objects will be fetched per origin/target location.",
					"enum": [
						"ORIGIN",
						"TARGET"
					],
					"example": "ORIGIN",
					"type": "string"
				}
			},
			{
				"description": "Limit the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
				"in": "query",
				"name": "limitPerLocation",
				"schema": {
					"description": "Limit the number of attacks per origin/target (refer to `limitDirection` parameter) location.",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"description": "Attack magnitude can be defined by total requests mitigated or by total zones attacked.",
				"in": "query",
				"name": "magnitude",
				"schema": {
					"description": "Attack magnitude can be defined by total requests mitigated or by total zones attacked.",
					"enum": [
						"AFFECTED_ZONES",
						"MITIGATED_REQUESTS"
					],
					"example": "MITIGATED_REQUESTS",
					"type": "string"
				}
			},
			{
				"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
				"in": "query",
				"name": "normalization",
				"schema": {
					"default": "PERCENTAGE",
					"description": "Normalization method applied. Refer to [Normalization methods](https://developers.cloudflare.com/radar/concepts/normalization/).",
					"enum": [
						"PERCENTAGE",
						"MIN_MAX"
					],
					"example": "PERCENTAGE",
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"originCountryName": {
														"example": "United States",
														"type": "string"
													},
													"targetCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"targetCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"targetCountryAlpha2",
													"targetCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top attack pairs (origin and target locations) by Layer 7 attacks",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/industry": {
		"description": "Get the industries targeted by attacks.",
		"operationId": "radar-get-attacks-layer7-top-industries",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Computer Software",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top Industry of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/locations/origin": {
		"description": "Get the top origin locations of and by Layer 7 attacks. Values are a percentage out of the total Layer 7 attacks. The origin location is determined by the client IP address.",
		"operationId": "radar-get-attacks-layer7-top-origin-location",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"originCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"originCountryName": {
														"example": "France",
														"type": "string"
													},
													"rank": {
														"example": 1,
														"type": "number"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"originCountryAlpha2",
													"originCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top origin locations by Layer 7 attacks",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/locations/target": {
		"description": "Get the top target locations of and by layer 7 attacks. Values are a percentage out of the total layer 7 attacks. The target location is determined by the attacked zone's billing country, when available.",
		"operationId": "radar-get-attacks-layer7-top-target-location",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"rank": {
														"example": 1,
														"type": "number"
													},
													"targetCountryAlpha2": {
														"example": "FR",
														"type": "string"
													},
													"targetCountryName": {
														"example": "France",
														"type": "string"
													},
													"value": {
														"example": "4.323214",
														"type": "string"
													}
												},
												"required": [
													"targetCountryAlpha2",
													"targetCountryName",
													"value",
													"rank"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Layer 7 top target locations",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/attacks/layer7/top/vertical": {
		"description": "Get the verticals targeted by attacks.",
		"operationId": "radar-get-attacks-layer7-top-verticals",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http method.",
				"in": "query",
				"name": "httpMethod",
				"schema": {
					"description": "Filter for http method.",
					"example": "GET",
					"items": {
						"enum": [
							"GET",
							"POST",
							"DELETE",
							"PUT",
							"HEAD",
							"PURGE",
							"OPTIONS",
							"PROPFIND",
							"MKCOL",
							"PATCH",
							"ACL",
							"BCOPY",
							"BDELETE",
							"BMOVE",
							"BPROPFIND",
							"BPROPPATCH",
							"CHECKIN",
							"CHECKOUT",
							"CONNECT",
							"COPY",
							"LABEL",
							"LOCK",
							"MERGE",
							"MKACTIVITY",
							"MKWORKSPACE",
							"MOVE",
							"NOTIFY",
							"ORDERPATCH",
							"POLL",
							"PROPPATCH",
							"REPORT",
							"SEARCH",
							"SUBSCRIBE",
							"TRACE",
							"UNCHECKOUT",
							"UNLOCK",
							"UNSUBSCRIBE",
							"UPDATE",
							"VERSIONCONTROL",
							"BASELINECONTROL",
							"XMSENUMATTS",
							"RPC_OUT_DATA",
							"RPC_IN_DATA",
							"JSON",
							"COOK",
							"TRACK"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of L7 mitigation products.",
				"in": "query",
				"name": "mitigationProduct",
				"schema": {
					"description": "Array of L7 mitigation products.",
					"items": {
						"enum": [
							"DDOS",
							"WAF",
							"BOT_MANAGEMENT",
							"ACCESS_RULES",
							"IP_REPUTATION",
							"API_SHIELD",
							"DATA_LOSS_PREVENTION"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"lastUpdated"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"name": {
														"example": "Internet and Telecom",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"name",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get top verticals of attack",
		"tags": [
			"Radar Attacks"
		],
		"x-api-token-group": [
			"User Details Write",
			"User Details Read"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}